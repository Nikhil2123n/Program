#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100

// Function declarations
void writeFile(const char *filename, const char *content);
void readFile(const char *filename);
int countWords(const char *str);
void reverseString(char *str);
int isPalindrome(const char *str);

int main() {
    char filename[] = "testfile.txt";
    char content[MAX] = "This is a test file. C programming is fun!";
    
    // File writing and reading
    printf("Writing to file...\n");
    writeFile(filename, content);
    printf("Reading from file...\n");
    readFile(filename);

    // String operations
    char str[MAX];
    strcpy(str, "madam");
    printf("\nOriginal String: %s\n", str);

    reverseString(str);
    printf("Reversed String: %s\n", str);

    strcpy(str, "madam");
    printf("\nIs '%s' a palindrome? %s\n", str, isPalindrome(str) ? "Yes" : "No");

    strcpy(str, "Hello World!");
    printf("\nString: %s\nWord Count: %d\n", str, countWords(str));

    return 0;
}

void writeFile(const char *filename, const char *content) {
    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        perror("Failed to open file");
        exit(EXIT_FAILURE);
    }
    fprintf(file, "%s", content);
    fclose(file);
}

void readFile(const char *filename) {
    FILE *file = fopen(filename, "r");
    if (file == NULL) {
        perror("Failed to open file");
        exit(EXIT_FAILURE);
    }

    char buffer[MAX];
    while (fgets(buffer, MAX, file) != NULL) {
        printf("%s", buffer);
    }
    fclose(file);
}

int countWords(const char *str) {
    int count = 0;
    int inWord = 0;

    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] == ' ' || str[i] == '\n' || str[i] == '\t') {
            inWord = 0;
        } else if (!inWord) {
            inWord = 1;
            count++;
        }
    }
    return count;
}

void reverseString(char *str) {
    int len = strlen(str);
    for (int i = 0; i < len / 2; i++) {
        char temp = str[i];
        str[i] = str[len - 1 - i];
        str[len - 1 - i] = temp;
    }
}

int isPalindrome(const char *str) {
    int len = strlen(str);
    for (int i = 0; i < len / 2; i++) {
        if (str[i] != str[len - 1 - i]) {
            return 0;
        }
    }
    return 1;
}
